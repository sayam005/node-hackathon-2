from flask import render_template, request, jsonify, Blueprint
import random
import urllib.parse

# CREATE BLUEPRINT with correct name
bp = Blueprint('papa_ki_unpaid_internship', __name__, url_prefix='/papa-ki-unpaid-internship')

@bp.route('/')
def index():
    """Papa Ki Unpaid Internship main page"""
    return render_template('papa_ki_unpaid_internship.html')

# ============= WEEKEND TIMER KILLER ROUTES =============
@bp.route('/task-generator')
def task_generator():
    """Weekend Timer Killer - Family entertainment hub"""
    return render_template('papa_task_generator.html')

@bp.route('/api/generate-task', methods=['POST'])
def api_generate_task():
    """API to generate weekend family activities"""
    try:
        data = request.get_json()
        family_member = data.get('family_member', 'everyone')
        mood = data.get('mood', 'normal')
        time_available = data.get('time_available', '30-60')
        
        task = generate_weekend_activity(family_member, mood, time_available)
        harry_comment = get_harry_comment(task)
        
        return jsonify({
            'success': True,
            'task': task,
            'harry_comment': harry_comment,
            'family_member': family_member,
            'mood': mood,
            'time_available': time_available
        })
        
    except Exception as e:
        return jsonify({
            'success': False,
            'error': f'Harry busy рд╣реИрдВ: {str(e)}'
        })

@bp.route('/api/task-categories')
def api_task_categories():
    """Get available weekend activity options"""
    categories = {
        'family_members': [
            {'value': 'kids', 'label': 'ЁЯС╢ рдмрдЪреНрдЪреЗ (5-15 years)', 'description': 'Energy рднрд░рдкреВрд░, entertainment рдЪрд╛рд╣рд┐рдП'},
            {'value': 'teenagers', 'label': 'ЁЯзСтАНЁЯОУ Teenagers (15-20)', 'description': 'Mobile рд╕реЗ рд╣рдЯрд╛рдирд╛ рд╣реИ'},
            {'value': 'wife', 'label': 'ЁЯСй Wife/Spouse', 'description': 'Productive рдпрд╛ relaxing activities'},
            {'value': 'husband', 'label': 'ЁЯСи Husband', 'description': 'Easy рдФрд░ entertaining tasks'},
            {'value': 'adults', 'label': 'ЁЯСйтАНЁЯТ╝ Adults', 'description': 'General productive activities'},
            {'value': 'elderly', 'label': 'ЁЯС┤ рдмреБрдЬреБрд░реНрдЧ', 'description': 'Light рдФрд░ enjoyable tasks'},
            {'value': 'everyone', 'label': 'ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж рдкреВрд░рд╛ Family', 'description': 'рд╕рдмрдХреЗ рд╕рд╛рде рдорд┐рд▓рдХрд░'}
        ],
        'mood_types': [
            {'value': 'energetic', 'label': 'тЪб Energetic', 'description': 'Energy burn рдХрд░рдиреА рд╣реИ'},
            {'value': 'lazy', 'label': 'ЁЯШ┤ Lazy mood', 'description': 'рдЖрд░рд╛рдо рд╕реЗ рдХреБрдЫ рдХрд░рдирд╛ рд╣реИ'},
            {'value': 'creative', 'label': 'ЁЯОи Creative', 'description': 'рдХреБрдЫ рдирдпрд╛ рдмрдирд╛рдирд╛ рд╣реИ'},
            {'value': 'productive', 'label': 'ЁЯТк Productive', 'description': 'рдШрд░ рдХрд╛ рдХрд╛рдо рднреА рд╣реЛ рдЬрд╛рдП'},
            {'value': 'fun', 'label': 'ЁЯОЙ Fun time', 'description': 'рдмрд╕ рдордЬрд╝реЗ рдХрд░рдиреЗ рд╣реИрдВ'},
            {'value': 'normal', 'label': 'ЁЯШК Normal', 'description': 'рдХреБрдЫ рднреА рдЪрд▓реЗрдЧрд╛'}
        ],
        'time_options': [
            {'value': '15-30', 'label': 'тП░ 15-30 minutes', 'description': 'Quick activity'},
            {'value': '30-60', 'label': 'ЁЯХР 30-60 minutes', 'description': 'Medium task'},
            {'value': '1-2', 'label': 'ЁЯХС 1-2 hours', 'description': 'Proper project'},
            {'value': '2+', 'label': 'ЁЯХХ 2+ hours', 'description': 'рдкреВрд░рд╛ рджрд┐рди рдирд┐рдХрд▓реЗрдЧрд╛'}
        ]
    }
    
    return jsonify(categories)

# ============= HARRY NOHARA'S AVERAGE SUNDAY ROUTES =============
@bp.route('/problem-solver')
def problem_solver():
    """Harry Nohara's Average Sunday - Household problem solver"""
    return render_template('papa_problem_solver.html')

@bp.route('/api/solve-problem', methods=['POST'])
def api_solve_problem():
    """API to get YouTube solutions for household problems"""
    try:
        data = request.get_json()
        problem = data.get('problem', '').strip()
        urgency = data.get('urgency', 'normal')
        
        if not problem:
            return jsonify({
                'success': False,
                'error': 'Problem рддреЛ рдмрддрд╛рдУ! Harry рдХреИрд╕реЗ help рдХрд░реЗрдВрдЧреЗ?'
            })
        
        # Generate YouTube tutorials
        youtube_tutorials = generate_youtube_tutorials(problem, urgency)
        harry_advice = get_harry_wisdom(problem)
        
        return jsonify({
            'success': True,
            'problem': problem,
            'urgency': urgency,
            'category': 'General Solution',
            'estimated_time': '15-30 minutes',
            'difficulty': 'Easy to Medium',
            'youtube_tutorials': youtube_tutorials,
            'papa_advice': harry_advice,
            'solutions': {
                'quick_check': [f'ЁЯФН "{problem}" рдХреЛ carefully observe рдХрд░реЛ'],
                'diy_steps': [f'ЁЯУ▒ YouTube tutorials рджреЗрдЦрдХрд░ step by step follow рдХрд░реЛ'],
                'safety_tips': ['тЪая╕П Safety рдХреЛ priority рджреЛ'],
                'when_to_call_expert': 'рдЕрдЧрд░ safety risk рд╣реЛ рддреЛ expert рд╕реЗ рдкреВрдЫреЛ'
            },
            'tools_needed': ['ЁЯУ▒ Mobile phone', 'ЁЯФз Basic tools']
        })
        
    except Exception as e:
        return jsonify({
            'success': False,
            'error': f'Technical problem: {str(e)}'
        })

@bp.route('/api/common-problems')
def api_common_problems():
    """Get list of common desi household problems"""
    problems = [
        {'problem': 'тЪб Light/Fan рдирд╣реАрдВ рдЪрд▓ рд░рд╣рд╛', 'category': 'electrical', 'urgency': 'normal'},
        {'problem': 'ЁЯТз Tap рд╕реЗ рдкрд╛рдиреА leak рд╣реЛ рд░рд╣рд╛', 'category': 'plumbing', 'urgency': 'high'},
        {'problem': 'ЁЯУ▒ WiFi slow рдпрд╛ disconnect', 'category': 'tech', 'urgency': 'normal'},
        {'problem': 'тЭДя╕П AC рдардВрдбрд╛ рдирд╣реАрдВ рдХрд░ рд░рд╣рд╛', 'category': 'appliances', 'urgency': 'high'},
        {'problem': 'ЁЯЪк Door/Window properly рдмрдВрдж рдирд╣реАрдВ', 'category': 'general', 'urgency': 'normal'},
        {'problem': 'ЁЯН│ Gas stove ignition problem', 'category': 'appliances', 'urgency': 'normal'},
        {'problem': 'ЁЯУ║ TV remote/cable issue', 'category': 'tech', 'urgency': 'low'},
        {'problem': 'ЁЯЪ╜ Toilet flush/drainage problem', 'category': 'plumbing', 'urgency': 'high'},
        {'problem': 'ЁЯФМ Socket loose рдпрд╛ sparking', 'category': 'electrical', 'urgency': 'emergency'},
        {'problem': 'ЁЯз╣ Stubborn stains/cleaning', 'category': 'general', 'urgency': 'low'}
    ]
    
    return jsonify({'common_problems': problems})

# ============= WEEKEND ACTIVITY GENERATOR =============
def generate_weekend_activity(family_member, mood, time_available):
    """Enhanced activity generator with more variety"""
    
    mega_activities = {
        'kids_energetic': [
            {'title': 'ЁЯПГтАНтЩВя╕П рдШрд░ рдореЗрдВ Obstacle Course', 'description': 'Pillows, chairs, рд░рд╕реНрд╕реА рд╕реЗ obstacle course рдмрдирд╛рдУ!', 'fun_factor': '2 рдШрдВрдЯреЗ energy burn guaranteed!', 'items_needed': 'Pillows, chairs, rope', 'bonus': 'Winner рдХреЛ special treat!'},
            {'title': 'ЁЯХ║ Dance Battle', 'description': 'YouTube dance videos follow рдХрд░рдХреЗ competition!', 'fun_factor': 'Exercise рднреА рд╣реЛ рдЬрд╛рдПрдЧреА!', 'items_needed': 'Phone, speaker, energy', 'bonus': 'Video рдмрдирд╛рдХрд░ relatives рдХреЛ рднреЗрдЬреЛ!'},
            {'title': 'ЁЯОп Target Practice', 'description': 'Paper balls рд╕реЗ dustbin рдореЗрдВ target practice!', 'fun_factor': 'Accuracy improve рд╣реЛрдЧреА!', 'items_needed': 'Waste paper, dustbin', 'bonus': 'House cleaning рднреА рд╣реЛ рдЬрд╛рдПрдЧреА!'},
            {'title': 'ЁЯПа House Treasure Hunt', 'description': 'рдШрд░ рдореЗрдВ items рдвреВрдВрдврдиреЗ рдХрд╛ game!', 'fun_factor': 'рдкреВрд░рд╛ рдШрд░ explore рдХрд░реЗрдВрдЧреЗ!', 'items_needed': 'Paper, pen for clues', 'bonus': 'Hidden things рднреА рдорд┐рд▓ рдЬрд╛рдПрдВрдЧреЗ!'}
        ],
        'kids_lazy': [
            {'title': 'ЁЯУЪ Story Creation', 'description': 'Family members рдХреЗ рд╕рд╛рде рдорд┐рд▓рдХрд░ story рдмрдирд╛рдУ!', 'fun_factor': 'Creativity develop рд╣реЛрдЧреА!', 'items_needed': 'Imagination, paper', 'bonus': 'Story book рдмрдирд╛ рд╕рдХрддреЗ рд╣реЛ!'},
            {'title': 'ЁЯОм Movie Marathon', 'description': 'Old family favorite movies рджреЗрдЦреЛ!', 'fun_factor': 'Cozy family time!', 'items_needed': 'Snacks, blankets', 'bonus': 'Childhood memories refresh!'},
            {'title': 'ЁЯзй Puzzle Challenge', 'description': 'рдЬрд┐рддрдиреЗ puzzles рд╣реИрдВ рд╕рдм solve рдХрд░реЛ!', 'fun_factor': 'Brain exercise quietly!', 'items_needed': 'Puzzles, patience', 'bonus': 'Problem solving skills!'}
        ],
        'teenagers_productive': [
            {'title': 'ЁЯУ╖ Photography Project', 'description': 'рдШрд░ рдХреЗ рд╣рд░ corner рдХреА artistic photos рд▓реЛ!', 'fun_factor': 'Instagram content ready!', 'items_needed': 'Phone camera, creativity', 'bonus': 'Portfolio рдмрдирд╛ рд╕рдХрддреЗ рд╣реЛ!'},
            {'title': 'ЁЯТ╗ Skill Learning', 'description': 'YouTube рд╕реЗ рдирдпрд╛ skill рд╕реАрдЦреЛ - coding, guitar, art!', 'fun_factor': 'Future investment!', 'items_needed': 'Internet, dedication', 'bonus': 'Resume рдореЗрдВ add рдХрд░ рд╕рдХрддреЗ рд╣реЛ!'},
            {'title': 'ЁЯУЭ Room Makeover Planning', 'description': 'рдЕрдкрдиреЗ room рдХрд╛ complete makeover plan рдХрд░реЛ!', 'fun_factor': 'Interior design skills!', 'items_needed': 'Paper, measuring tape', 'bonus': 'Parents рдХреЛ impress рдХрд░рдХреЗ budget рдорд╛рдВрдЧ рд╕рдХрддреЗ рд╣реЛ!'}
        ],
        'adults_productive': [
            {'title': 'ЁЯУК Financial Planning', 'description': 'Monthly budget review рдФрд░ next month planning!', 'fun_factor': 'Money management clarity!', 'items_needed': 'Calculator, bills, notebook', 'bonus': 'Savings plan рдмрди рдЬрд╛рдПрдЧрд╛!'},
            {'title': 'ЁЯЧВя╕П Document Organization', 'description': 'рд╕рд╛рд░реЗ important documents organize рдХрд░реЛ!', 'fun_factor': 'Future рдореЗрдВ time рдмрдЪреЗрдЧрд╛!', 'items_needed': 'Files, labels', 'bonus': 'Emergency рдореЗрдВ documents ready рд╣реЛрдВрдЧреЗ!'},
            {'title': 'ЁЯМ▒ Garden Planning', 'description': 'Balcony/terrace рдореЗрдВ plants arrange рдХрд░рдиреЗ рдХрд╛ plan!', 'fun_factor': 'Green environment!', 'items_needed': 'Pots, soil, seeds', 'bonus': 'Fresh vegetables рдШрд░ рдореЗрдВ!'}
        ],
        'everyone_fun': [
            {'title': 'ЁЯОн Family Drama Performance', 'description': 'TV serial рдХрд╛ scene recreate рдХрд░реЛ!', 'fun_factor': 'Acting skills discover рд╣реЛрдВрдЧреЗ!', 'items_needed': 'Costumes, phone for recording', 'bonus': 'Viral video рдмрди рд╕рдХрддрд╛ рд╣реИ!'},
            {'title': 'ЁЯН│ Mystery Ingredient Cooking', 'description': 'Random ingredients рд╕реЗ dish рдмрдирд╛рдиреЗ рдХрд╛ challenge!', 'fun_factor': 'New recipes discover!', 'items_needed': 'Kitchen ingredients', 'bonus': 'Next week рдХреЗ рд▓рд┐рдП new dish!'},
            {'title': 'ЁЯОи Family Art Gallery', 'description': 'рд╕рднреА рдЕрдкрдирд╛ artwork рдмрдирд╛рдХрд░ рдШрд░ рдореЗрдВ gallery setup рдХрд░реЛ!', 'fun_factor': 'Creative family bonding!', 'items_needed': 'Paper, colors, tape', 'bonus': 'Guests рдХреЛ impress рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП!'},
            {'title': 'ЁЯУ▒ Family TikTok Challenge', 'description': 'Trending challenges try рдХрд░рдХреЗ videos рдмрдирд╛рдУ!', 'fun_factor': 'Modern family bonding!', 'items_needed': 'Phone, creativity', 'bonus': 'Social media content ready!'}
        ],
        'wife_productive': [
            {'title': 'ЁЯН│ Kitchen Organization', 'description': 'Spices arrange рдХрд░рдХреЗ labels рд▓рдЧрд╛рдУ, expired items рдирд┐рдХрд╛рд▓реЛ!', 'fun_factor': 'Cooking time save рд╣реЛрдЧрд╛!', 'items_needed': 'Labels, containers', 'bonus': 'Husband impressed рд╣реЛрдЧрд╛!'},
            {'title': 'ЁЯСЧ Wardrobe Declutter', 'description': 'Purane clothes sort рдХрд░рдХреЗ donation bag рдмрдирд╛рдУ!', 'fun_factor': 'Space рдорд┐рд▓ рдЬрд╛рдПрдЧреА рдирдП clothes рдХреЗ рд▓рд┐рдП!', 'items_needed': 'Boxes, donation bags', 'bonus': 'Shopping justification ready!'},
            {'title': 'ЁЯУ▒ Photo Organization', 'description': 'Phone рдХреА photos organize рдХрд░рдХреЗ family albums рдмрдирд╛рдУ!', 'fun_factor': 'Memories refresh рд╣реЛрдВрдЧреА!', 'items_needed': 'Phone, Google Photos', 'bonus': 'Social media content ready!'}
        ],
        'wife_fun': [
            {'title': 'ЁЯТД DIY Beauty Session', 'description': 'Ghar рдХреЗ ingredients рд╕реЗ face pack рдФрд░ hair mask рдмрдирд╛рдУ!', 'fun_factor': 'Parlor рдХрд╛ paisa bach рдЬрд╛рдПрдЧрд╛!', 'items_needed': 'Kitchen ingredients, creativity', 'bonus': 'Natural glow guaranteed!'},
            {'title': 'ЁЯО╡ Bollywood Dance Session', 'description': 'Favorite songs рдкрд░ solo dance рдХрд░рдХреЗ videos рдмрдирд╛рдУ!', 'fun_factor': 'Fitness + entertainment!', 'items_needed': 'Phone, speaker, energy', 'bonus': 'Husband рдХреЛ impress рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП!'},
            {'title': 'тШХ Tea Tasting Adventure', 'description': 'Different types рдХреА chai try рдХрд░рдХреЗ rating рдХрд░реЛ!', 'fun_factor': 'Perfect chai recipe discover рдХрд░реЛ!', 'items_needed': 'Various tea types, notebook', 'bonus': 'Family рдХреЗ рд▓рд┐рдП signature chai!'}
        ],
        'husband_lazy': [
            {'title': 'ЁЯУ║ Sports Highlights Marathon', 'description': 'Week рдХреЗ рд╕рд╛рд░реЗ sports highlights рджреЗрдЦреЛ!', 'fun_factor': 'Sports knowledge update!', 'items_needed': 'TV, snacks, remote', 'bonus': 'Friends рдХреЗ рд╕рд╛рде discussion ready!'},
            {'title': 'ЁЯУ▒ Investment Research', 'description': 'Mutual funds рдФрд░ stocks research рдХрд░рдХреЗ notes рдмрдирд╛рдУ!', 'fun_factor': 'Financial planning without effort!', 'items_needed': 'Phone, notepad', 'bonus': 'Wife рдХреЛ responsible husband lag рд░рд╣реЗ рд╣реЛ!'},
            {'title': 'ЁЯЫЛя╕П Furniture Rearrangement', 'description': 'Room рдХрд╛ layout change рдХрд░рдХреЗ photos рд▓реЛ!', 'fun_factor': 'Interior designer рдмрдирдиреЗ рдХрд╛ feel!', 'items_needed': 'Existing furniture, creativity', 'bonus': 'Wife рдЦреБрд╢ рд╣реЛ рдЬрд╛рдПрдЧреА!'}
        ],
        'elderly_fun': [
            {'title': 'ЁЯУ╗ Classic Songs Session', 'description': 'Purane zamane рдХреЗ songs рд╕реБрдирдХреЗ memories share рдХрд░реЛ!', 'fun_factor': 'Nostalgia рдФрд░ family stories!', 'items_needed': 'Music player, comfortable seating', 'bonus': 'Young generation рдХреЛ history рдорд┐рд▓реЗрдЧрд╛!'},
            {'title': 'ЁЯМ▒ Indoor Gardening', 'description': 'Small plants care рдХрд░рдХреЗ gardening tips share рдХрд░реЛ!', 'fun_factor': 'Nature connection рдФрд░ knowledge sharing!', 'items_needed': 'Plants, water, love', 'bonus': 'House рдХреА air quality improve!'},
            {'title': 'ЁЯУЪ Story Narration', 'description': 'рдмрдЪрдкрди рдХреА stories рдмрддрд╛рдХрд░ family рдХреЛ entertain рдХрд░реЛ!', 'fun_factor': 'Wisdom sharing + entertainment!', 'items_needed': 'Memory, comfortable spot', 'bonus': 'Family bonding strengthen рд╣реЛрдЧреА!'}
        ]
    }
    
    # Create key
    key = f"{family_member}_{mood}"
    
    # Get activities or fallback
    activities = mega_activities.get(key, mega_activities.get('everyone_fun', []))
    if not activities:
        activities = [{'title': 'ЁЯОЙ Family Fun Time', 'description': 'рдХреБрдЫ рднреА рдордЬрд╝реЗрджрд╛рд░ рдХрд░реЛ together!', 'fun_factor': 'Always works!', 'items_needed': 'Good mood', 'bonus': 'Family happiness!'}]
    
    activity = random.choice(activities)
    
    # Add time note
    if time_available == '15-30':
        activity['time_note'] = 'Quick version - highlights only!'
    elif time_available == '2+':
        activity['time_note'] = 'Extended version - full experience!'
    
    return activity

def get_harry_comment(task):
    """Get Harry's encouraging comment for weekend activities"""
    
    comments = [
        'Perfect! Sunday рдХреЛ productive рдмрдирд╛рдиреЗ рдХрд╛ рдмреЗрд╣рддрд░реАрди рддрд░реАрдХрд╛! Family time + fun! ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж',
        'Excellent choice! Weekends рдРрд╕реЗ рд╣реА utilize рдХрд░рдиреЗ рдЪрд╛рд╣рд┐рдП - no boring time! ЁЯОЙ',
        'Harry approved! рдпреЗ activity рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж рд╕рдмрдХреЛ satisfaction рдорд┐рд▓реЗрдЧрд╛! тЬи',
        'Brilliant! рдШрд░ рдореЗрдВ entertainment, family bonding, рдФрд░ memories - рд╕рдм рдПрдХ рд╕рд╛рде! ЁЯПЖ',
        'Great idea! Sunday evening рдореЗрдВ рд╕рдмрдХреЗ рдкрд╛рд╕ share рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП stories рд╣реЛрдВрдЧреА! ЁЯШК',
        'Wonderful! рдРрд╕реЗ activities рд╕реЗ family bond strong рд╣реЛрддрд╛ рд╣реИ! Keep it up! ЁЯТк',
        'Amazing! Bore рд╣реЛрдиреЗ рдХрд╛ chance рд╣реА рдирд╣реАрдВ рд╣реИ - full entertainment package! ЁЯОк',
        'Superb! Sunday well spent - productive рднреА, fun рднреА! Harry style! ЁЯСН'
    ]
    
    return random.choice(comments)

def get_harry_wisdom(problem):
    """Get Harry's practical wisdom for household problems"""
    
    wisdom_quotes = [
        'Sunday рдХреЛ рдХреЛрдИ problem рдирд╣реАрдВ рд░реЛрдХ рд╕рдХрддреА! DIY spirit рд╕реЗ sab solve рд╣реЛ рдЬрд╛рддрд╛ рд╣реИ! ЁЯТк',
        'Ghar рдХреЗ рдЫреЛрдЯреЗ problems рдЦреБрдж handle рдХрд░рдирд╛ рдЖрдирд╛ рдЪрд╛рд╣рд┐рдП - confidence рдмрдврд╝рддрд╛ рд╣реИ! ЁЯФз',
        'Emergency рдореЗрдВ panic рдирд╣реАрдВ рдХрд░рдирд╛, step by step solution try рдХрд░рдирд╛ - Harry mantra! ЁЯШМ',
        'Most household problems simple рд╣реИрдВ, рдмрд╕ patience рдФрд░ right approach рдЪрд╛рд╣рд┐рдП! ЁЯза',
        'Safety first, solution second - рдпрд╣ рд╣рдореЗрд╢рд╛ рдпрд╛рдж рд░рдЦрдирд╛ family рдХреЗ рд▓рд┐рдП! тЪая╕П',
        'DIY solutions рд╕реЗ рдкреИрд╕рд╛ рднреА рдмрдЪрддрд╛ рд╣реИ рдФрд░ skill рднреА develop рд╣реЛрддреА рд╣реИ! ЁЯТб',
        'Family рдХреЗ рд╕рд╛рде рдорд┐рд▓рдХрд░ problems solve рдХрд░рдирд╛ рдмреЗрд╣рддрд░ - teamwork! ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж',
        'рд╣рд░ problem рдПрдХ learning opportunity рд╣реИ - next time рдЕрдкрдиреЗ рдЖрдк handle рдХрд░ рд╕рдХреЛрдЧреЗ! ЁЯУЪ'
    ]
    
    return random.choice(wisdom_quotes)

# ============= HOUSEHOLD PROBLEM SOLVER =============
def get_household_solution(problem, urgency):
    """Get practical desi household solutions with dynamic YouTube tutorials"""
    
    problem_lower = problem.lower()
    
    # Generate dynamic YouTube tutorials based on problem
    youtube_tutorials = generate_youtube_tutorials(problem, urgency)
    
    # Electrical problems
    if any(word in problem_lower for word in ['light', 'fan', 'switch', 'electrical', 'current']):
        return {
            'category': 'Electrical Issue',
            'estimated_time': '15-30 minutes' if urgency != 'emergency' else '5-15 minutes',
            'difficulty': 'Easy to Medium',
            'solutions': {
                'quick_check': [
                    'ЁЯФМ Main switch on рд╣реИ рдХрд┐ рдирд╣реАрдВ check рдХрд░реЛ',
                    'ЁЯТб Other lights/fans working рд╣реИрдВ рдХрд┐ рдирд╣реАрдВ verify рдХрд░реЛ',
                    'ЁЯФз Switch рдХреЛ properly on/off рдХрд░рдХреЗ try рдХрд░реЛ',
                    'ЁЯСА Visible damage, burning smell рддреЛ рдирд╣реАрдВ?'
                ],
                'diy_steps': [
                    'тЪб Main supply off рдХрд░рдХреЗ safety ensure рдХрд░реЛ',
                    'ЁЯз╜ Switch/connection points clean рдХрд░реЛ (dust рд╣рдЯрд╛рдУ)',
                    'ЁЯФй Loose connections tight рдХрд░реЛ (if accessible)',
                    'ЁЯТб Bulb/tube light рдХреЛ remove рдХрд░рдХреЗ рдлрд┐рд░ properly fix рдХрд░реЛ',
                    'ЁЯФД Slowly main switch on рдХрд░рдХреЗ test рдХрд░реЛ'
                ],
                'safety_tips': [
                    'тЪая╕П Electrical рдХрд╛рдо рд╕реЗ рдкрд╣рд▓реЗ рд╣рдореЗрд╢рд╛ main switch off рдХрд░реЛ',
                    'ЁЯзд Dry hands рд░рдЦреЛ, wet hands рд╕реЗ рдХрднреА рди рдЫреБрдУ',
                    'ЁЯСА рдЕрдЧрд░ sparking рдпрд╛ burning smell рдЖрдП рддреЛ рддреБрд░рдВрдд рд░реЛрдХреЛ',
                    'ЁЯСитАНЁЯФз Major electrical issues рдореЗрдВ expert рдХреЛ call рдХрд░реЛ'
                ],
                'when_to_call_expert': 'рдЕрдЧрд░ burning smell, sparking, рдпрд╛ multiple devices affected рд╣реЛрдВ'
            },
            'tools_needed': [
                'ЁЯФз Basic screwdriver set',
                'ЁЯз╜ Cleaning cloth',
                'ЁЯТб Replacement bulb (if needed)',
                'ЁЯФж Torch/mobile flashlight'
            ],
            'youtube_tutorials': youtube_tutorials
        }
    
    # Plumbing problems
    elif any(word in problem_lower for word in ['tap', 'water', 'leak', 'pipe', 'toilet', 'flush']):
        return {
            'category': 'Plumbing Issue',
            'estimated_time': '20-45 minutes' if urgency != 'emergency' else '10-20 minutes',
            'difficulty': 'Easy to Medium',
            'solutions': {
                'quick_check': [
                    'ЁЯТз Main water supply on рд╣реИ рдХрд┐ рдирд╣реАрдВ',
                    'ЁЯЪ┐ Other taps рд╕реЗ water рдЖ рд░рд╣рд╛ рд╣реИ?',
                    'ЁЯСА Leak рдХрд╣рд╛рдБ рд╕реЗ рд╣реЛ рд░рд╣рд╛ рд╣реИ exactly?',
                    'ЁЯФз Handle/valve properly move рд╣реЛ рд░рд╣рд╛ рд╣реИ?'
                ],
                'diy_steps': [
                    'ЁЯЫС Main water valve рдмрдВрдж рдХрд░реЛ (very important!)',
                    'ЁЯз╜ Area рдХреЛ clean рдФрд░ dry рдХрд░реЛ',
                    'ЁЯФз Loose joints/screws рдХреЛ carefully tight рдХрд░реЛ',
                    'ЁЯФД Rubber washers check рдХрд░рдХреЗ replace рдХрд░реЛ (тВ╣5-10)',
                    'ЁЯТз Slowly water supply on рдХрд░рдХреЗ test рдХрд░реЛ'
                ],
                'safety_tips': [
                    'ЁЯЫС рдкрд╛рдиреА рдХрд╛ main valve рдкрд╣рд▓реЗ рдмрдВрдж рдХрд░реЛ',
                    'ЁЯз╜ Area рдХреЛ dry рд░рдЦреЛ slip рди рдЬрд╛рдУ',
                    'тЪая╕П Hot water рдХреЗ рд╕рд╛рде careful рд░рд╣реЛ',
                    'ЁЯТз Major leakage рдореЗрдВ рддреБрд░рдВрдд main supply рдмрдВрдж рдХрд░реЛ'
                ],
                'when_to_call_expert': 'рдЕрдЧрд░ main pipe damage рдпрд╛ pressure issues рд╣реЛрдВ'
            },
            'tools_needed': [
                'ЁЯФз Adjustable wrench',
                'ЁЯз╜ Cleaning cloths',
                'ЁЯТН Rubber washers (тВ╣5-10)',
                'ЁЯз░ Basic toolkit'
            ],
            'youtube_tutorials': youtube_tutorials
        }
    
    # Tech problems  
    elif any(word in problem_lower for word in ['wifi', 'internet', 'tv', 'remote', 'phone', 'tech']):
        return {
            'category': 'Tech Issue',
            'estimated_time': '10-30 minutes' if urgency != 'emergency' else '5-15 minutes',
            'difficulty': 'Easy',
            'solutions': {
                'quick_check': [
                    'ЁЯФМ Device рдХрд╛ power properly connected рд╣реИ?',
                    'ЁЯУ╢ Other devices working рд╣реИрдВ same network рдкрд░?',
                    'ЁЯФЛ Remote рдХреА battery check рдХрд░реЛ',
                    'ЁЯУб Router/modem рдХреЗ lights green рд╣реИрдВ?'
                ],
                'diy_steps': [
                    'ЁЯФД Device рдХреЛ off рдХрд░рдХреЗ 30 seconds wait, рдлрд┐рд░ on рдХрд░реЛ',
                    'ЁЯз╜ Remote рдХреЗ buttons clean рдХрд░реЛ, battery change рдХрд░реЛ',
                    'ЁЯУ▒ WiFi рдХреЛ forget рдХрд░рдХреЗ reconnect рдХрд░реЛ',
                    'ЁЯМР Router рдХреЛ restart рдХрд░реЛ (2 minutes off рд░рдЦреЛ)',
                    'ЁЯУЮ Service provider рдХреЛ call рдХрд░рдХреЗ complaint рдХрд░реЛ'
                ],
                'safety_tips': [
                    'тЪб Power connections properly check рдХрд░реЛ',
                    'ЁЯФЛ Battery рдХреЛ рд╕рд╣реА direction рдореЗрдВ рд▓рдЧрд╛рдУ',
                    'ЁЯТз Electronics рдХреЛ water рд╕реЗ рджреВрд░ рд░рдЦреЛ',
                    'ЁЯМбя╕П Overheating рдХреЛ avoid рдХрд░реЛ'
                ],
                'when_to_call_expert': 'рдЕрдЧрд░ hardware damage рдпрд╛ line issue рд╣реЛ'
            },
            'tools_needed': [
                'ЁЯФЛ Replacement batteries',
                'ЁЯз╜ Cleaning cloth',
                'ЁЯУ▒ Mobile phone (for testing)',
                'ЁЯУЮ Service provider number'
            ],
            'youtube_tutorials': youtube_tutorials
        }
    
    # Generic solution
    else:
        return {
            'category': 'General Household Issue',
            'estimated_time': '15-60 minutes' if urgency != 'emergency' else '10-30 minutes',
            'difficulty': 'Varies',
            'solutions': {
                'quick_check': [
                    'ЁЯФН Problem рдХреЛ carefully observe рдХрд░реЛ',
                    'ЁЯУЦ Manual/warranty check рдХрд░реЛ',
                    'ЁЯФМ Power supply рдФрд░ basic connections verify рдХрд░реЛ',
                    'ЁЯСе Family members рд╕реЗ similar experience рдкреВрдЫреЛ'
                ],
                'diy_steps': [
                    'ЁЯз╜ Basic cleaning рдФрд░ maintenance try рдХрд░реЛ',
                    'ЁЯФз Visible loose parts рдХреЛ carefully tight рдХрд░реЛ',
                    'ЁЯУ▒ YouTube рдкрд░ similar problem search рдХрд░реЛ',
                    'ЁЯТм Neighbors рдпрд╛ friends рд╕реЗ advice рд▓реЛ',
                    'ЁЯУЮ Customer care helpline рдкрд░ call рдХрд░реЛ'
                ],
                'safety_tips': [
                    'тЪая╕П Safety рдХреЛ priority рджреЛ',
                    'ЁЯФМ Power off рдХрд░рдХреЗ рдХрд╛рдо рдХрд░реЛ',
                    'ЁЯУЪ Manual рдкрдврд╝реЛ рдкрд╣рд▓реЗ',
                    'ЁЯСитАНЁЯФз Doubt рд╣реЛ рддреЛ expert рд╕реЗ рдкреВрдЫреЛ'
                ],
                'when_to_call_expert': 'рдЕрдЧрд░ safety risk рд╣реЛ рдпрд╛ warranty void рд╣реЛ рд╕рдХрддреА рд╣реЛ'
            },
            'tools_needed': [
                'ЁЯФз Basic toolkit',
                'ЁЯз╜ Cleaning materials',
                'ЁЯУ▒ Mobile for research',
                'ЁЯУЪ Product manual'
            ],
            'youtube_tutorials': youtube_tutorials
        }


def generate_youtube_tutorials(problem, urgency):
    """Generate 2-3 YouTube tutorials based on the specific problem and urgency"""
    
    # Clean and prepare search terms
    problem_clean = problem.lower().strip()
    
    # Create different search queries based on urgency
    urgency_modifiers = {
        'emergency': ['quick fix', 'immediate solution', 'urgent repair'],
        'high': ['easy fix', 'step by step', 'diy repair'],
        'normal': ['detailed tutorial', 'complete guide', 'how to fix'],
        'low': ['maintenance', 'prevention', 'tips and tricks']
    }
    
    modifiers = urgency_modifiers.get(urgency, urgency_modifiers['normal'])
    
    # Generate 3 different YouTube search URLs
    tutorials = []
    
    # Tutorial 1: Direct problem search with Hindi
    search_1 = f"{problem_clean} fix hindi home solution"
    tutorials.append({
        'title': f'ЁЯОп {problem} - Hindi Solution',
        'search_link': f'https://www.youtube.com/results?search_query={urllib.parse.quote_plus(search_1)}',
        'description': f'"{problem}" рдХреА direct solution Hindi рдореЗрдВ',
        'estimated_duration': '8-15 minutes',
        'papa_rating': 'тнРтнРтнРтнРтнР',
        'urgency_type': f'{urgency.title()} Priority'
    })
    
    # Tutorial 2: Problem + urgency modifier
    search_2 = f"{problem_clean} {modifiers[0]} hindi tutorial"
    tutorials.append({
        'title': f'тЪб {modifiers[0].title()} Method - {urgency.title()} Level',
        'search_link': f'https://www.youtube.com/results?search_query={urllib.parse.quote_plus(search_2)}',
        'description': f'{urgency.title()} urgency рдХреЗ рд▓рд┐рдП {modifiers[0]} approach',
        'estimated_duration': '5-12 minutes' if urgency == 'emergency' else '10-20 minutes',
        'papa_rating': 'тнРтнРтнРтнР',
        'urgency_type': f'Best for {urgency} situations'
    })
    
    # Tutorial 3: Alternative approach + prevention
    search_3 = f"{problem_clean} {modifiers[1]} troubleshooting hindi"
    tutorials.append({
        'title': f'ЁЯФз Alternative Method + Prevention Tips',
        'search_link': f'https://www.youtube.com/results?search_query={urllib.parse.quote_plus(search_3)}',
        'description': f'Different approach рдФрд░ future prevention рдХреЗ tips',
        'estimated_duration': '12-25 minutes',
        'papa_rating': 'тнРтнРтнРтнР',
        'urgency_type': 'Complete understanding'
    })
    
    return tutorials
